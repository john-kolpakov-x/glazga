def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")
def vendorName = "greetgo!"
def ggRepo = System.getenv('GG_REPO')

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'maven'

  version = '0.0.1'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  group = "kz.greetgo.glazga"

  compileJava.options.debugOptions.debugLevel = "source,lines,vars"
  compileJava.options.encoding = "UTF-8"
  compileTestJava.options.debugOptions.debugLevel = "source,lines,vars"
  compileTestJava.options.encoding = "UTF-8"
}

subprojects {
  repositories {
    mavenLocal()
    if (ggRepo != null && ggRepo.length() > 0) maven { url ggRepo }
    mavenCentral()
  }

  dependencies {
    ext.testNgVersion = '6.14.3'

    compile 'org.slf4j:slf4j-api:1.7.22'

    testCompile "org.testng:testng:$testNgVersion"
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
  }

  compileJava.options.encoding = "UTF-8"
  compileTestJava.options.encoding = "UTF-8"

  jar {
    manifest {
      attributes 'Specification-Title': project.name
      attributes 'Specification-Version': version
      attributes 'Specification-Vendor': vendorName
      attributes 'Created-By': System.getProperty("user.name")
      attributes 'Created-At': nowFormattedDate
    }
  }

  test.useTestNG()

  idea.module.downloadSources = true
  idea.module.inheritOutputDirs = false
  idea.module.outputDir = file("$buildDir/classes/main/")
  idea.module.testOutputDir = file("$buildDir/classes/test/")

  compileJava.options.encoding = 'UTF-8'
  compileTestJava.options.encoding = 'UTF-8'

  sourceSets.main.java.srcDirs = ["src"]
  sourceSets.test.java.srcDirs = ["test_src"]
  sourceSets.main.resources.srcDirs = ["src_resources"]
  sourceSets.test.resources.srcDirs = ["test_resources"]

  sourceSets.main.resources {
    srcDirs += sourceSets.main.java.srcDirs
    exclude '**/*.java'
  }
  sourceSets.test.resources {
    srcDirs += sourceSets.test.java.srcDirs
    exclude '**/*.java'
  }
}
